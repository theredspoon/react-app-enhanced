# Attempted complete list of files to git ignore
# Copy and reuse as desired

# Compiled Python files
*.pyc

# Compiled C++ files
*.out

# Application specific files
venv
.sass-cache

# Floobits
.floo
.floobit
.floo
.flooignore

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
dist/build/
compiled/
public/
/build

# Dependency directories
node_modules
jspm_packages
bower_components

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# Compiled source
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Databases
*.sql
*.sqlite

# OS generated files / folder view configuration files
Desktop.ini
.DS_Store
.DS_Store?

# Thumbnail cache files
._*
ehthumbs.db
Thumbs.db

# Files that might appear on external disks
.Spotlight-V100
.Trashes


# Grunt generated files


# API Keys and env variables
.env

# VSCode workspace settings
.vscode/

# Icon must ends with two \r.
Icon

.AppleDouble
.LSOverride
azure.err
iisnode.yml

# typings definitions (used with VS Code)
typings

# jsconfig for intellisense in VS Code
jsconfig.json
